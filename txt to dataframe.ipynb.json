{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "hide_input": false
   },
   "outputs": [],
   "source": [
    "#rename all files to add .txt\n",
    "import os,glob\n",
    "os.chdir(\"/Users/ntoscano/Desktop/Text Data/maildir_extract/\")\n",
    "for fi in glob.glob(\"*\"):\n",
    "   os.rename(fi, fi + \".txt\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#rename only files with ..txt to add .txt\n",
    "import os,glob\n",
    "os.chdir(\"/Users/ntoscano/Desktop/Text Data/maildir_extract/\")\n",
    "for fi in glob.glob(\"*..txt\"):\n",
    "   os.rename(fi, fi[:-5] + \".txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#create single txt file\n",
    "import glob\n",
    "\n",
    "read_files = glob.glob(\"*.txt\")\n",
    "\n",
    "with open(\"result.txt\", \"wb\") as outfile:\n",
    "    for f in read_files:\n",
    "        with open(f, \"rb\") as infile:\n",
    "            outfile.write(infile.read())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                      0\n",
      "0     b'Message-ID: <8942957.1075856416975.JavaMail....\n",
      "1     b\"Message-ID: <19633032.1075856816170.JavaMail...\n",
      "2     b\"Message-ID: <4184891.1075855172708.JavaMail....\n",
      "3     b'Message-ID: <3432252.1075841789397.JavaMail....\n",
      "4     b'Message-ID: <4980056.1075856367531.JavaMail....\n",
      "...                                                 ...\n",
      "3631  b\"Message-ID: <22510694.1075852722570.JavaMail...\n",
      "3632  b'Message-ID: <2656192.1075863404497.JavaMail....\n",
      "3633  b'Message-ID: <9990660.1075856327003.JavaMail....\n",
      "3634  b'Message-ID: <26811363.1075863410624.JavaMail...\n",
      "3635  b'Message-ID: <5601169.1075840756629.JavaMail....\n",
      "\n",
      "[3636 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "##import to list and then df\n",
    "#import pandas as pd\n",
    "#import os\n",
    "\n",
    "#os.chdir(\"/Users/ntoscano/Desktop/Text Data/maildir_extract/\")\n",
    "\n",
    "#data = []\n",
    "#path = \"/Users/ntoscano/Desktop/Text Data/maildir_extract/\"\n",
    "#files = [f for f in os.listdir(path) if os.path.isfile(f)]\n",
    "#for f in files:\n",
    "#  with open (f, \"rb\") as myfile:\n",
    "#    data.append(myfile.read())\n",
    "\n",
    "\n",
    "#df = pd.DataFrame(data)\n",
    "#print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "##Export Results to csv\n",
    "#os.chdir(\"/Users/ntoscano/Desktop/\")\n",
    "#df.to_csv('enron_emails.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "os.chdir(\"/Users/ntoscano/Desktop/Text Data/maildir_extract/\")\n",
    "\n",
    "file_names = os.listdir(\"/Users/ntoscano/Desktop/Text Data/maildir_extract/\")\n",
    "# Create Dictionary for File Name and Text\n",
    "file_name_and_text = {}\n",
    "for file in file_names:\n",
    "    with open(\"/Users/ntoscano/Desktop/Text Data/maildir_extract/\" + file, \"rb\") as target_file:\n",
    "         file_name_and_text[file] = target_file.read()\n",
    "file_data = (pd.DataFrame.from_dict(file_name_and_text, orient='index')\n",
    "             .reset_index().rename(index = str, columns = {'index': 'file_name', 0: 'text'}))\n",
    "print(file_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "os.chdir(\"/Users/ntoscano/Desktop/\")\n",
    "df.to_csv('enron_emails.csv')"
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "oldHeight": 568,
   "position": {
    "height": "253px",
    "left": "777px",
    "right": "20px",
    "top": "7px",
    "width": "480px"
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "varInspector_section_display": "block",
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
